OOPSHOME = /home/agr/oops/oops_cvs
AMPLSOLVER = /home/agr/struct_model/amplsolver
YACC = bison
YACCFLAGS = -d
#YACCFLAGS += -t -v
LEX = flex
LEXFLAGS = 
#LEXFLAGS += -d
CFLAGS = -g 
CXXFLAGS = -I$(AMPLSOLVER) -I$(OOPSHOME)/include -gstabs
#COMPILE.cpp = g++ -g -c
CC = g++ 
LDFLAGS += -L$(AMPLSOLVER) -lamplsolver -L$(OOPSHOME)/lib -loops -llapack -lmetis -lgfortran -lefence

# for parallel uncomment this
#CXXFLAGS += -DWITH_MPI -DMPI_PATH="\"mpi.h\"" 
#CXX = mpic++

OBJECT := ampl.yy.o ampl.tab.cpp symtab.o nodes.o backend.o AmplModel.o \
          model_comp.o ExpandedModel.o AmplsolverCalls.o sml-oops.o \
	  OOPSBlock.o StochModel.o StochModelComp.o data.tab.o data.yy.o \
          Set.o CompDescrParam.o SetElement.o
all: sml


sml: $(OBJECT)
	$(CC) -o$@ $^ $(LDFLAGS) -lfl -ldl


ampl.yy.cpp: ampl.l ampl.tab.h
	$(LEX) $(LEXFLAGS) -o$@ $<

data.yy.cpp: data.l data.tab.h
	$(LEX) -Pdata $(LEXFLAGS) -o$@ $<

ampl.tab.cpp ampl.tab.h: ampl.ypp
	$(YACC) $(YACCFLAGS) $<

data.tab.cpp data.tab.h: data.ypp
	$(YACC) -pdata $(YACCFLAGS) $<

clean:
	-rm -rf *.tab.cpp
	-rm -rf *.tab.hpp
	-rm -rf *.yy.cpp
	-rm -rf *.o
	-rm -rf sml
	-rm -rf smlp

# dependencies
symtab.cpp: nodes.h symtab.h ampl.tab.h
nodes.cpp: nodes.h
