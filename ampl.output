Terminals which are not used

   COEFF
   COVER
   OBJ
   FROM
   TO
   TO_COME
   NET_IN
   NET_OUT
   NODE
   CIRCULAR
   REVERSED
   ARC
   CHECK
   CLOSE
   DISPLAY
   DROP
   PRINT
   PRINTF
   QUIT
   RESET
   RESTORE
   UPDATE
   WRITE
   SHELL
   DATA
   OPTION
   SOLUTION
   FIX
   UNFIX
   FUNCTION
   PIPE
   FORMAT
   SETOF
   BY
   LESS
   MOD
   DIV
   AND
   OR
   EXISTS
   FORALL
   NOT
   WHILE
   REPEAT
   FOR
   NEXT
   NEXTW
   PREV
   PREVW
   FIRST
   LAST
   MEMBER
   ORD_ZERO
   OBJECTIVE
   UNION
   INTER
   SYMDIFF
   IDREF
   IDREFM


Rules never reduced

   33 relop: ASSIGN


State 147 conflicts: 2 shift/reduce
State 148 conflicts: 2 shift/reduce
State 162 conflicts: 1 reduce/reduce
State 207 conflicts: 9 shift/reduce
State 215 conflicts: 8 shift/reduce
State 239 conflicts: 12 shift/reduce
State 248 conflicts: 8 shift/reduce


Grammar

    0 $accept: statements $end

    1 statements: /* empty */
    2           | statements statement

    3 block: modelblock
    4      | coreblock
    5      | blockblock

    6 modelblock: modelblockbegin statements modelblockend

    7 modelblockbegin: MODEL ID optionlist
    8                | MODEL MODELTYPE ID optionlist

    9 modelblockend: END MODEL

   10 optionlist: /* empty */
   11           | LBRACKET commasepoptions RBRACKET

   12 commasepoptions: ID
   13                | ID COMMA commasepoptions

   14 blockblock: blockblockbegin statements blockblockend

   15 blockblockbegin: BLOCK ID indexing_opt COLON

   16 blockblockend: END BLOCK SEMICOLON

   17 coreblock: BEG CORE statements END CORE

   18 statement: setdef SEMICOLON
   19          | paramdef SEMICOLON
   20          | vardef SEMICOLON
   21          | cnstr SEMICOLON
   22          | command SEMICOLON
   23          | block
   24          | INCLUDE ID SEMICOLON
   25          | set_default COLON

   26 set_default: TIMESTAGE INT_VAL

   27 command: SOLVE
   28        | LET indexing identifier DEFINED expr

   29 relop: LE
   30      | GE
   31      | LT
   32      | GT
   33      | ASSIGN
   34      | EQ
   35      | NE

   36 equation: expr ASSIGN expr
   37         | expr LT expr
   38         | expr LE expr
   39         | expr GT expr
   40         | expr GE expr
   41         | expr EQ expr

   42 @1: /* empty */

   43 cnstr: MAXIMIZE ID indexing_opt @1 COLON expr

   44 @2: /* empty */

   45 cnstr: MINIMIZE ID indexing_opt @2 COLON expr

   46 @3: /* empty */

   47 cnstr: SUBJECTTO ID indexing_opt @3 COLON equation

   48 indexing_opt: /* empty */
   49             | indexing

   50 indexing: LBRACE setexpr_list COLON lexpr RBRACE
   51         | LBRACE setexpr_list RBRACE

   52 setexpr_list: setexpr_item
   53             | setexpr_list COMMA setexpr_item

   54 setexpr_item: setexpression
   55             | dummy_member IN setexpression

   56 dummy_member: ID
   57             | LBRACKET ID COMMA ID RBRACKET

   58 lexpr: expr
   59      | LBRACKET lexpr RBRACKET
   60      | equation

   61 @4: /* empty */

   62 setdef: SET ID indexing_opt @4 setattributes

   63 @5: /* empty */

   64 paramdef: qualifier PARAM ID indexing_opt @5 paramattributes

   65 @6: /* empty */

   66 vardef: VAR ID indexing_opt @6 varattributes

   67 qualifier: /* empty */
   68          | PUBLIC
   69          | RANDOM

   70 setattributes: /* empty */
   71              | setattributes setattribute

   72 setattribute: DIMEN INT_VAL
   73             | WITHIN setexpression
   74             | ASSIGN setexpression
   75             | DEFAULT setexpression
   76             | ORDERED

   77 paramattributes: /* empty */
   78                | paramattributes paramattribute

   79 paramattribute: BINARY
   80               | INTEGER
   81               | SYMBOLIC
   82               | relop expr
   83               | IN setexpression
   84               | ASSIGN expr
   85               | DEFAULT expr

   86 varattributes: /* empty */
   87              | varattributes varattribute

   88 varattribute: BINARY
   89             | INTEGER
   90             | SYMBOLIC
   91             | LE expr
   92             | GE expr
   93             | DEFINED expr
   94             | ASSIGN expr
   95             | DEFAULT expr
   96             | IN setexpression
   97             | SUFFIX ID expr

   98 setexpression: LBRACE expr_list RBRACE
   99              | identifier
  100              | setexpression CROSS setexpression
  101              | setexpression DIFF setexpression

  102 identifier: iditem
  103           | identifier DOT iditem

  104 iditem: ID
  105       | ID LSBRACKET expr_list RSBRACKET

  106 expr_list: expr
  107          | expr_list COMMA expr

  108 expr: value
  109     | LBRACKET expr_list RBRACKET
  110     | expr '+' expr
  111     | expr '-' expr
  112     | expr '*' expr
  113     | expr '/' expr
  114     | expr POWER expr
  115     | expr ELLIPSE expr
  116     | expr LOGICAL_OR expr
  117     | expr LOGICAL_AND expr
  118     | '!' expr

  119 @7: /* empty */

  120 expr: reduction_op indexing @7 expr
  121     | IF lexpr THEN expr
  122     | IF lexpr THEN expr ELSE expr
  123     | func LBRACKET expr_list RBRACKET

  124 func: ORD
  125     | CARD

  126 reduction_op: SUM
  127             | MAX
  128             | MIN
  129             | PROD

  130 value: INT_VAL
  131      | FLOAT_VAL
  132      | identifier
  133      | INFINITY


Terminals, with rules where they appear

$end (0) 0
'!' (33) 118
'*' (42) 112
'+' (43) 110
'-' (45) 111
'/' (47) 113
error (256)
ID (258) 7 8 12 13 15 24 43 45 47 56 57 62 64 66 97 104 105
INT_VAL (259) 26 72 130
FLOAT_VAL (260) 131
INFINITY (261) 133
COEFF (262)
COVER (263)
OBJ (264)
DEFAULT (265) 75 85 95
FROM (266)
TO (267)
TO_COME (268)
MODELTYPE (269) 8
NET_IN (270)
NET_OUT (271)
DIMEN (272) 72
NODE (273)
ORDERED (274) 76
CIRCULAR (275)
REVERSED (276)
SYMBOLIC (277) 81 90
ARC (278)
INTEGER (279) 80 89
BINARY (280) 79 88
CHECK (281)
CLOSE (282)
DISPLAY (283)
DROP (284)
INCLUDE (285) 24
PRINT (286)
PRINTF (287)
QUIT (288)
RESET (289)
RESTORE (290)
SOLVE (291) 27
UPDATE (292)
WRITE (293)
SHELL (294)
MODEL (295) 7 8 9
DATA (296)
OPTION (297)
LET (298) 28
SOLUTION (299)
FIX (300)
UNFIX (301)
END (302) 9 16 17
FUNCTION (303)
PIPE (304)
FORMAT (305)
SETOF (306)
BY (307)
LESS (308)
MOD (309)
DIV (310)
MIN (311) 128
MAX (312) 127
IF (313) 121 122
THEN (314) 121 122
ELSE (315) 122
AND (316)
OR (317)
EXISTS (318)
FORALL (319)
NOT (320)
WITHIN (321) 73
WHILE (322)
REPEAT (323)
FOR (324)
CARD (325) 125
NEXT (326)
NEXTW (327)
PREV (328)
PREVW (329)
FIRST (330)
LAST (331)
MEMBER (332)
ORD (333) 124
ORD_ZERO (334)
VAR (335) 66
PARAM (336) 64
SET (337) 62
MAXIMIZE (338) 43
MINIMIZE (339) 45
OBJECTIVE (340)
SUBJECTTO (341) 47
SUM (342) 126
PROD (343) 129
IN (344) 55 83 96
POWER (345) 114
NE (346) 35
LE (347) 29 38 91
GE (348) 30 40 92
EQ (349) 34 41
LT (350) 31 37
GT (351) 32 39
UNION (352)
DIFF (353) 101
CROSS (354) 100
INTER (355)
SYMDIFF (356)
LBRACE (357) 50 51 98
RBRACE (358) 50 51 98
COMMA (359) 13 53 57 107
SEMICOLON (360) 16 18 19 20 21 22 24
LSBRACKET (361) 105
RSBRACKET (362) 105
COLON (363) 15 25 43 45 47 50
LBRACKET (364) 11 57 59 109 123
RBRACKET (365) 11 57 59 109 123
DEFINED (366) 28 93
LOGICAL_OR (367) 116
LOGICAL_AND (368) 117
ELLIPSE (369) 115
PUBLIC (370) 68
CORE (371) 17
DOT (372) 103
BEG (373) 17
TIMESTAGE (374) 26
RANDOM (375) 69
SUFFIX (376) 97
BLOCK (377) 15 16
IDREF (378)
IDREFM (379)
ASSIGN (380) 33 36 74 84 94


Nonterminals, with rules where they appear

$accept (131)
    on left: 0
statements (132)
    on left: 1 2, on right: 0 2 6 14 17
block (133)
    on left: 3 4 5, on right: 23
modelblock (134)
    on left: 6, on right: 3
modelblockbegin (135)
    on left: 7 8, on right: 6
modelblockend (136)
    on left: 9, on right: 6
optionlist (137)
    on left: 10 11, on right: 7 8
commasepoptions (138)
    on left: 12 13, on right: 11 13
blockblock (139)
    on left: 14, on right: 5
blockblockbegin (140)
    on left: 15, on right: 14
blockblockend (141)
    on left: 16, on right: 14
coreblock (142)
    on left: 17, on right: 4
statement (143)
    on left: 18 19 20 21 22 23 24 25, on right: 2
set_default (144)
    on left: 26, on right: 25
command (145)
    on left: 27 28, on right: 22
relop (146)
    on left: 29 30 31 32 33 34 35, on right: 82
equation (147)
    on left: 36 37 38 39 40 41, on right: 47 60
cnstr (148)
    on left: 43 45 47, on right: 21
@1 (149)
    on left: 42, on right: 43
@2 (150)
    on left: 44, on right: 45
@3 (151)
    on left: 46, on right: 47
indexing_opt (152)
    on left: 48 49, on right: 15 43 45 47 62 64 66
indexing (153)
    on left: 50 51, on right: 28 49 120
setexpr_list (154)
    on left: 52 53, on right: 50 51 53
setexpr_item (155)
    on left: 54 55, on right: 52 53
dummy_member (156)
    on left: 56 57, on right: 55
lexpr (157)
    on left: 58 59 60, on right: 50 59 121 122
setdef (158)
    on left: 62, on right: 18
@4 (159)
    on left: 61, on right: 62
paramdef (160)
    on left: 64, on right: 19
@5 (161)
    on left: 63, on right: 64
vardef (162)
    on left: 66, on right: 20
@6 (163)
    on left: 65, on right: 66
qualifier (164)
    on left: 67 68 69, on right: 64
setattributes (165)
    on left: 70 71, on right: 62 71
setattribute (166)
    on left: 72 73 74 75 76, on right: 71
paramattributes (167)
    on left: 77 78, on right: 64 78
paramattribute (168)
    on left: 79 80 81 82 83 84 85, on right: 78
varattributes (169)
    on left: 86 87, on right: 66 87
varattribute (170)
    on left: 88 89 90 91 92 93 94 95 96 97, on right: 87
setexpression (171)
    on left: 98 99 100 101, on right: 54 55 73 74 75 83 96 100 101
identifier (172)
    on left: 102 103, on right: 28 99 103 132
iditem (173)
    on left: 104 105, on right: 102 103
expr_list (174)
    on left: 106 107, on right: 98 105 107 109 123
expr (175)
    on left: 108 109 110 111 112 113 114 115 116 117 118 120 121 122
    123, on right: 28 36 37 38 39 40 41 43 45 58 82 84 85 91 92 93
    94 95 97 106 107 110 111 112 113 114 115 116 117 118 120 121 122
@7 (176)
    on left: 119, on right: 120
func (177)
    on left: 124 125, on right: 123
reduction_op (178)
    on left: 126 127 128 129, on right: 120
value (179)
    on left: 130 131 132 133, on right: 108


state 0

    0 $accept: . statements $end

    $default  reduce using rule 1 (statements)

    statements  go to state 1


state 1

    0 $accept: statements . $end
    2 statements: statements . statement

    $end       shift, and go to state 2
    INCLUDE    shift, and go to state 3
    SOLVE      shift, and go to state 4
    MODEL      shift, and go to state 5
    LET        shift, and go to state 6
    VAR        shift, and go to state 7
    SET        shift, and go to state 8
    MAXIMIZE   shift, and go to state 9
    MINIMIZE   shift, and go to state 10
    SUBJECTTO  shift, and go to state 11
    PUBLIC     shift, and go to state 12
    BEG        shift, and go to state 13
    TIMESTAGE  shift, and go to state 14
    RANDOM     shift, and go to state 15
    BLOCK      shift, and go to state 16

    $default  reduce using rule 67 (qualifier)

    block            go to state 17
    modelblock       go to state 18
    modelblockbegin  go to state 19
    blockblock       go to state 20
    blockblockbegin  go to state 21
    coreblock        go to state 22
    statement        go to state 23
    set_default      go to state 24
    command          go to state 25
    cnstr            go to state 26
    setdef           go to state 27
    paramdef         go to state 28
    vardef           go to state 29
    qualifier        go to state 30


state 2

    0 $accept: statements $end .

    $default  accept


state 3

   24 statement: INCLUDE . ID SEMICOLON

    ID  shift, and go to state 31


state 4

   27 command: SOLVE .

    $default  reduce using rule 27 (command)


state 5

    7 modelblockbegin: MODEL . ID optionlist
    8                | MODEL . MODELTYPE ID optionlist

    ID         shift, and go to state 32
    MODELTYPE  shift, and go to state 33


state 6

   28 command: LET . indexing identifier DEFINED expr

    LBRACE  shift, and go to state 34

    indexing  go to state 35


state 7

   66 vardef: VAR . ID indexing_opt @6 varattributes

    ID  shift, and go to state 36


state 8

   62 setdef: SET . ID indexing_opt @4 setattributes

    ID  shift, and go to state 37


state 9

   43 cnstr: MAXIMIZE . ID indexing_opt @1 COLON expr

    ID  shift, and go to state 38


state 10

   45 cnstr: MINIMIZE . ID indexing_opt @2 COLON expr

    ID  shift, and go to state 39


state 11

   47 cnstr: SUBJECTTO . ID indexing_opt @3 COLON equation

    ID  shift, and go to state 40


state 12

   68 qualifier: PUBLIC .

    $default  reduce using rule 68 (qualifier)


state 13

   17 coreblock: BEG . CORE statements END CORE

    CORE  shift, and go to state 41


state 14

   26 set_default: TIMESTAGE . INT_VAL

    INT_VAL  shift, and go to state 42


state 15

   69 qualifier: RANDOM .

    $default  reduce using rule 69 (qualifier)


state 16

   15 blockblockbegin: BLOCK . ID indexing_opt COLON

    ID  shift, and go to state 43


state 17

   23 statement: block .

    $default  reduce using rule 23 (statement)


state 18

    3 block: modelblock .

    $default  reduce using rule 3 (block)


state 19

    6 modelblock: modelblockbegin . statements modelblockend

    $default  reduce using rule 1 (statements)

    statements  go to state 44


state 20

    5 block: blockblock .

    $default  reduce using rule 5 (block)


state 21

   14 blockblock: blockblockbegin . statements blockblockend

    $default  reduce using rule 1 (statements)

    statements  go to state 45


state 22

    4 block: coreblock .

    $default  reduce using rule 4 (block)


state 23

    2 statements: statements statement .

    $default  reduce using rule 2 (statements)


state 24

   25 statement: set_default . COLON

    COLON  shift, and go to state 46


state 25

   22 statement: command . SEMICOLON

    SEMICOLON  shift, and go to state 47


state 26

   21 statement: cnstr . SEMICOLON

    SEMICOLON  shift, and go to state 48


state 27

   18 statement: setdef . SEMICOLON

    SEMICOLON  shift, and go to state 49


state 28

   19 statement: paramdef . SEMICOLON

    SEMICOLON  shift, and go to state 50


state 29

   20 statement: vardef . SEMICOLON

    SEMICOLON  shift, and go to state 51


state 30

   64 paramdef: qualifier . PARAM ID indexing_opt @5 paramattributes

    PARAM  shift, and go to state 52


state 31

   24 statement: INCLUDE ID . SEMICOLON

    SEMICOLON  shift, and go to state 53


state 32

    7 modelblockbegin: MODEL ID . optionlist

    LBRACKET  shift, and go to state 54

    $default  reduce using rule 10 (optionlist)

    optionlist  go to state 55


state 33

    8 modelblockbegin: MODEL MODELTYPE . ID optionlist

    ID  shift, and go to state 56


state 34

   50 indexing: LBRACE . setexpr_list COLON lexpr RBRACE
   51         | LBRACE . setexpr_list RBRACE

    ID        shift, and go to state 57
    LBRACE    shift, and go to state 58
    LBRACKET  shift, and go to state 59

    setexpr_list   go to state 60
    setexpr_item   go to state 61
    dummy_member   go to state 62
    setexpression  go to state 63
    identifier     go to state 64
    iditem         go to state 65


state 35

   28 command: LET indexing . identifier DEFINED expr

    ID  shift, and go to state 66

    identifier  go to state 67
    iditem      go to state 65


state 36

   66 vardef: VAR ID . indexing_opt @6 varattributes

    LBRACE  shift, and go to state 34

    $default  reduce using rule 48 (indexing_opt)

    indexing_opt  go to state 68
    indexing      go to state 69


state 37

   62 setdef: SET ID . indexing_opt @4 setattributes

    LBRACE  shift, and go to state 34

    $default  reduce using rule 48 (indexing_opt)

    indexing_opt  go to state 70
    indexing      go to state 69


state 38

   43 cnstr: MAXIMIZE ID . indexing_opt @1 COLON expr

    LBRACE  shift, and go to state 34

    $default  reduce using rule 48 (indexing_opt)

    indexing_opt  go to state 71
    indexing      go to state 69


state 39

   45 cnstr: MINIMIZE ID . indexing_opt @2 COLON expr

    LBRACE  shift, and go to state 34

    $default  reduce using rule 48 (indexing_opt)

    indexing_opt  go to state 72
    indexing      go to state 69


state 40

   47 cnstr: SUBJECTTO ID . indexing_opt @3 COLON equation

    LBRACE  shift, and go to state 34

    $default  reduce using rule 48 (indexing_opt)

    indexing_opt  go to state 73
    indexing      go to state 69


state 41

   17 coreblock: BEG CORE . statements END CORE

    $default  reduce using rule 1 (statements)

    statements  go to state 74


state 42

   26 set_default: TIMESTAGE INT_VAL .

    $default  reduce using rule 26 (set_default)


state 43

   15 blockblockbegin: BLOCK ID . indexing_opt COLON

    LBRACE  shift, and go to state 34

    $default  reduce using rule 48 (indexing_opt)

    indexing_opt  go to state 75
    indexing      go to state 69


state 44

    2 statements: statements . statement
    6 modelblock: modelblockbegin statements . modelblockend

    INCLUDE    shift, and go to state 3
    SOLVE      shift, and go to state 4
    MODEL      shift, and go to state 5
    LET        shift, and go to state 6
    END        shift, and go to state 76
    VAR        shift, and go to state 7
    SET        shift, and go to state 8
    MAXIMIZE   shift, and go to state 9
    MINIMIZE   shift, and go to state 10
    SUBJECTTO  shift, and go to state 11
    PUBLIC     shift, and go to state 12
    BEG        shift, and go to state 13
    TIMESTAGE  shift, and go to state 14
    RANDOM     shift, and go to state 15
    BLOCK      shift, and go to state 16

    $default  reduce using rule 67 (qualifier)

    block            go to state 17
    modelblock       go to state 18
    modelblockbegin  go to state 19
    modelblockend    go to state 77
    blockblock       go to state 20
    blockblockbegin  go to state 21
    coreblock        go to state 22
    statement        go to state 23
    set_default      go to state 24
    command          go to state 25
    cnstr            go to state 26
    setdef           go to state 27
    paramdef         go to state 28
    vardef           go to state 29
    qualifier        go to state 30


state 45

    2 statements: statements . statement
   14 blockblock: blockblockbegin statements . blockblockend

    INCLUDE    shift, and go to state 3
    SOLVE      shift, and go to state 4
    MODEL      shift, and go to state 5
    LET        shift, and go to state 6
    END        shift, and go to state 78
    VAR        shift, and go to state 7
    SET        shift, and go to state 8
    MAXIMIZE   shift, and go to state 9
    MINIMIZE   shift, and go to state 10
    SUBJECTTO  shift, and go to state 11
    PUBLIC     shift, and go to state 12
    BEG        shift, and go to state 13
    TIMESTAGE  shift, and go to state 14
    RANDOM     shift, and go to state 15
    BLOCK      shift, and go to state 16

    $default  reduce using rule 67 (qualifier)

    block            go to state 17
    modelblock       go to state 18
    modelblockbegin  go to state 19
    blockblock       go to state 20
    blockblockbegin  go to state 21
    blockblockend    go to state 79
    coreblock        go to state 22
    statement        go to state 23
    set_default      go to state 24
    command          go to state 25
    cnstr            go to state 26
    setdef           go to state 27
    paramdef         go to state 28
    vardef           go to state 29
    qualifier        go to state 30


state 46

   25 statement: set_default COLON .

    $default  reduce using rule 25 (statement)


state 47

   22 statement: command SEMICOLON .

    $default  reduce using rule 22 (statement)


state 48

   21 statement: cnstr SEMICOLON .

    $default  reduce using rule 21 (statement)


state 49

   18 statement: setdef SEMICOLON .

    $default  reduce using rule 18 (statement)


state 50

   19 statement: paramdef SEMICOLON .

    $default  reduce using rule 19 (statement)


state 51

   20 statement: vardef SEMICOLON .

    $default  reduce using rule 20 (statement)


state 52

   64 paramdef: qualifier PARAM . ID indexing_opt @5 paramattributes

    ID  shift, and go to state 80


state 53

   24 statement: INCLUDE ID SEMICOLON .

    $default  reduce using rule 24 (statement)


state 54

   11 optionlist: LBRACKET . commasepoptions RBRACKET

    ID  shift, and go to state 81

    commasepoptions  go to state 82


state 55

    7 modelblockbegin: MODEL ID optionlist .

    $default  reduce using rule 7 (modelblockbegin)


state 56

    8 modelblockbegin: MODEL MODELTYPE ID . optionlist

    LBRACKET  shift, and go to state 54

    $default  reduce using rule 10 (optionlist)

    optionlist  go to state 83


state 57

   56 dummy_member: ID .
  104 iditem: ID .
  105       | ID . LSBRACKET expr_list RSBRACKET

    LSBRACKET  shift, and go to state 84

    IN        reduce using rule 56 (dummy_member)
    $default  reduce using rule 104 (iditem)


state 58

   98 setexpression: LBRACE . expr_list RBRACE

    ID         shift, and go to state 66
    INT_VAL    shift, and go to state 85
    FLOAT_VAL  shift, and go to state 86
    INFINITY   shift, and go to state 87
    MIN        shift, and go to state 88
    MAX        shift, and go to state 89
    IF         shift, and go to state 90
    CARD       shift, and go to state 91
    ORD        shift, and go to state 92
    SUM        shift, and go to state 93
    PROD       shift, and go to state 94
    LBRACKET   shift, and go to state 95
    '!'        shift, and go to state 96

    identifier    go to state 97
    iditem        go to state 65
    expr_list     go to state 98
    expr          go to state 99
    func          go to state 100
    reduction_op  go to state 101
    value         go to state 102


state 59

   57 dummy_member: LBRACKET . ID COMMA ID RBRACKET

    ID  shift, and go to state 103


state 60

   50 indexing: LBRACE setexpr_list . COLON lexpr RBRACE
   51         | LBRACE setexpr_list . RBRACE
   53 setexpr_list: setexpr_list . COMMA setexpr_item

    RBRACE  shift, and go to state 104
    COMMA   shift, and go to state 105
    COLON   shift, and go to state 106


state 61

   52 setexpr_list: setexpr_item .

    $default  reduce using rule 52 (setexpr_list)


state 62

   55 setexpr_item: dummy_member . IN setexpression

    IN  shift, and go to state 107


state 63

   54 setexpr_item: setexpression .
  100 setexpression: setexpression . CROSS setexpression
  101              | setexpression . DIFF setexpression

    DIFF   shift, and go to state 108
    CROSS  shift, and go to state 109

    $default  reduce using rule 54 (setexpr_item)


state 64

   99 setexpression: identifier .
  103 identifier: identifier . DOT iditem

    DOT  shift, and go to state 110

    $default  reduce using rule 99 (setexpression)


state 65

  102 identifier: iditem .

    $default  reduce using rule 102 (identifier)


state 66

  104 iditem: ID .
  105       | ID . LSBRACKET expr_list RSBRACKET

    LSBRACKET  shift, and go to state 84

    $default  reduce using rule 104 (iditem)


state 67

   28 command: LET indexing identifier . DEFINED expr
  103 identifier: identifier . DOT iditem

    DEFINED  shift, and go to state 111
    DOT      shift, and go to state 110


state 68

   66 vardef: VAR ID indexing_opt . @6 varattributes

    $default  reduce using rule 65 (@6)

    @6  go to state 112


state 69

   49 indexing_opt: indexing .

    $default  reduce using rule 49 (indexing_opt)


state 70

   62 setdef: SET ID indexing_opt . @4 setattributes

    $default  reduce using rule 61 (@4)

    @4  go to state 113


state 71

   43 cnstr: MAXIMIZE ID indexing_opt . @1 COLON expr

    $default  reduce using rule 42 (@1)

    @1  go to state 114


state 72

   45 cnstr: MINIMIZE ID indexing_opt . @2 COLON expr

    $default  reduce using rule 44 (@2)

    @2  go to state 115


state 73

   47 cnstr: SUBJECTTO ID indexing_opt . @3 COLON equation

    $default  reduce using rule 46 (@3)

    @3  go to state 116


state 74

    2 statements: statements . statement
   17 coreblock: BEG CORE statements . END CORE

    INCLUDE    shift, and go to state 3
    SOLVE      shift, and go to state 4
    MODEL      shift, and go to state 5
    LET        shift, and go to state 6
    END        shift, and go to state 117
    VAR        shift, and go to state 7
    SET        shift, and go to state 8
    MAXIMIZE   shift, and go to state 9
    MINIMIZE   shift, and go to state 10
    SUBJECTTO  shift, and go to state 11
    PUBLIC     shift, and go to state 12
    BEG        shift, and go to state 13
    TIMESTAGE  shift, and go to state 14
    RANDOM     shift, and go to state 15
    BLOCK      shift, and go to state 16

    $default  reduce using rule 67 (qualifier)

    block            go to state 17
    modelblock       go to state 18
    modelblockbegin  go to state 19
    blockblock       go to state 20
    blockblockbegin  go to state 21
    coreblock        go to state 22
    statement        go to state 23
    set_default      go to state 24
    command          go to state 25
    cnstr            go to state 26
    setdef           go to state 27
    paramdef         go to state 28
    vardef           go to state 29
    qualifier        go to state 30


state 75

   15 blockblockbegin: BLOCK ID indexing_opt . COLON

    COLON  shift, and go to state 118


state 76

    9 modelblockend: END . MODEL

    MODEL  shift, and go to state 119


state 77

    6 modelblock: modelblockbegin statements modelblockend .

    $default  reduce using rule 6 (modelblock)


state 78

   16 blockblockend: END . BLOCK SEMICOLON

    BLOCK  shift, and go to state 120


state 79

   14 blockblock: blockblockbegin statements blockblockend .

    $default  reduce using rule 14 (blockblock)


state 80

   64 paramdef: qualifier PARAM ID . indexing_opt @5 paramattributes

    LBRACE  shift, and go to state 34

    $default  reduce using rule 48 (indexing_opt)

    indexing_opt  go to state 121
    indexing      go to state 69


state 81

   12 commasepoptions: ID .
   13                | ID . COMMA commasepoptions

    COMMA  shift, and go to state 122

    $default  reduce using rule 12 (commasepoptions)


state 82

   11 optionlist: LBRACKET commasepoptions . RBRACKET

    RBRACKET  shift, and go to state 123


state 83

    8 modelblockbegin: MODEL MODELTYPE ID optionlist .

    $default  reduce using rule 8 (modelblockbegin)


state 84

  105 iditem: ID LSBRACKET . expr_list RSBRACKET

    ID         shift, and go to state 66
    INT_VAL    shift, and go to state 85
    FLOAT_VAL  shift, and go to state 86
    INFINITY   shift, and go to state 87
    MIN        shift, and go to state 88
    MAX        shift, and go to state 89
    IF         shift, and go to state 90
    CARD       shift, and go to state 91
    ORD        shift, and go to state 92
    SUM        shift, and go to state 93
    PROD       shift, and go to state 94
    LBRACKET   shift, and go to state 95
    '!'        shift, and go to state 96

    identifier    go to state 97
    iditem        go to state 65
    expr_list     go to state 124
    expr          go to state 99
    func          go to state 100
    reduction_op  go to state 101
    value         go to state 102


state 85

  130 value: INT_VAL .

    $default  reduce using rule 130 (value)


state 86

  131 value: FLOAT_VAL .

    $default  reduce using rule 131 (value)


state 87

  133 value: INFINITY .

    $default  reduce using rule 133 (value)


state 88

  128 reduction_op: MIN .

    $default  reduce using rule 128 (reduction_op)


state 89

  127 reduction_op: MAX .

    $default  reduce using rule 127 (reduction_op)


state 90

  121 expr: IF . lexpr THEN expr
  122     | IF . lexpr THEN expr ELSE expr

    ID         shift, and go to state 66
    INT_VAL    shift, and go to state 85
    FLOAT_VAL  shift, and go to state 86
    INFINITY   shift, and go to state 87
    MIN        shift, and go to state 88
    MAX        shift, and go to state 89
    IF         shift, and go to state 90
    CARD       shift, and go to state 91
    ORD        shift, and go to state 92
    SUM        shift, and go to state 93
    PROD       shift, and go to state 94
    LBRACKET   shift, and go to state 125
    '!'        shift, and go to state 96

    equation      go to state 126
    lexpr         go to state 127
    identifier    go to state 97
    iditem        go to state 65
    expr          go to state 128
    func          go to state 100
    reduction_op  go to state 101
    value         go to state 102


state 91

  125 func: CARD .

    $default  reduce using rule 125 (func)


state 92

  124 func: ORD .

    $default  reduce using rule 124 (func)


state 93

  126 reduction_op: SUM .

    $default  reduce using rule 126 (reduction_op)


state 94

  129 reduction_op: PROD .

    $default  reduce using rule 129 (reduction_op)


state 95

  109 expr: LBRACKET . expr_list RBRACKET

    ID         shift, and go to state 66
    INT_VAL    shift, and go to state 85
    FLOAT_VAL  shift, and go to state 86
    INFINITY   shift, and go to state 87
    MIN        shift, and go to state 88
    MAX        shift, and go to state 89
    IF         shift, and go to state 90
    CARD       shift, and go to state 91
    ORD        shift, and go to state 92
    SUM        shift, and go to state 93
    PROD       shift, and go to state 94
    LBRACKET   shift, and go to state 95
    '!'        shift, and go to state 96

    identifier    go to state 97
    iditem        go to state 65
    expr_list     go to state 129
    expr          go to state 99
    func          go to state 100
    reduction_op  go to state 101
    value         go to state 102


state 96

  118 expr: '!' . expr

    ID         shift, and go to state 66
    INT_VAL    shift, and go to state 85
    FLOAT_VAL  shift, and go to state 86
    INFINITY   shift, and go to state 87
    MIN        shift, and go to state 88
    MAX        shift, and go to state 89
    IF         shift, and go to state 90
    CARD       shift, and go to state 91
    ORD        shift, and go to state 92
    SUM        shift, and go to state 93
    PROD       shift, and go to state 94
    LBRACKET   shift, and go to state 95
    '!'        shift, and go to state 96

    identifier    go to state 97
    iditem        go to state 65
    expr          go to state 130
    func          go to state 100
    reduction_op  go to state 101
    value         go to state 102


state 97

  103 identifier: identifier . DOT iditem
  132 value: identifier .

    DOT  shift, and go to state 110

    $default  reduce using rule 132 (value)


state 98

   98 setexpression: LBRACE expr_list . RBRACE
  107 expr_list: expr_list . COMMA expr

    RBRACE  shift, and go to state 131
    COMMA   shift, and go to state 132


state 99

  106 expr_list: expr .
  110 expr: expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '*' expr
  113     | expr . '/' expr
  114     | expr . POWER expr
  115     | expr . ELLIPSE expr
  116     | expr . LOGICAL_OR expr
  117     | expr . LOGICAL_AND expr

    POWER        shift, and go to state 133
    LOGICAL_OR   shift, and go to state 134
    LOGICAL_AND  shift, and go to state 135
    ELLIPSE      shift, and go to state 136
    '+'          shift, and go to state 137
    '-'          shift, and go to state 138
    '*'          shift, and go to state 139
    '/'          shift, and go to state 140

    $default  reduce using rule 106 (expr_list)


state 100

  123 expr: func . LBRACKET expr_list RBRACKET

    LBRACKET  shift, and go to state 141


state 101

  120 expr: reduction_op . indexing @7 expr

    LBRACE  shift, and go to state 34

    indexing  go to state 142


state 102

  108 expr: value .

    $default  reduce using rule 108 (expr)


state 103

   57 dummy_member: LBRACKET ID . COMMA ID RBRACKET

    COMMA  shift, and go to state 143


state 104

   51 indexing: LBRACE setexpr_list RBRACE .

    $default  reduce using rule 51 (indexing)


state 105

   53 setexpr_list: setexpr_list COMMA . setexpr_item

    ID        shift, and go to state 57
    LBRACE    shift, and go to state 58
    LBRACKET  shift, and go to state 59

    setexpr_item   go to state 144
    dummy_member   go to state 62
    setexpression  go to state 63
    identifier     go to state 64
    iditem         go to state 65


state 106

   50 indexing: LBRACE setexpr_list COLON . lexpr RBRACE

    ID         shift, and go to state 66
    INT_VAL    shift, and go to state 85
    FLOAT_VAL  shift, and go to state 86
    INFINITY   shift, and go to state 87
    MIN        shift, and go to state 88
    MAX        shift, and go to state 89
    IF         shift, and go to state 90
    CARD       shift, and go to state 91
    ORD        shift, and go to state 92
    SUM        shift, and go to state 93
    PROD       shift, and go to state 94
    LBRACKET   shift, and go to state 125
    '!'        shift, and go to state 96

    equation      go to state 126
    lexpr         go to state 145
    identifier    go to state 97
    iditem        go to state 65
    expr          go to state 128
    func          go to state 100
    reduction_op  go to state 101
    value         go to state 102


state 107

   55 setexpr_item: dummy_member IN . setexpression

    ID      shift, and go to state 66
    LBRACE  shift, and go to state 58

    setexpression  go to state 146
    identifier     go to state 64
    iditem         go to state 65


state 108

  101 setexpression: setexpression DIFF . setexpression

    ID      shift, and go to state 66
    LBRACE  shift, and go to state 58

    setexpression  go to state 147
    identifier     go to state 64
    iditem         go to state 65


state 109

  100 setexpression: setexpression CROSS . setexpression

    ID      shift, and go to state 66
    LBRACE  shift, and go to state 58

    setexpression  go to state 148
    identifier     go to state 64
    iditem         go to state 65


state 110

  103 identifier: identifier DOT . iditem

    ID  shift, and go to state 66

    iditem  go to state 149


state 111

   28 command: LET indexing identifier DEFINED . expr

    ID         shift, and go to state 66
    INT_VAL    shift, and go to state 85
    FLOAT_VAL  shift, and go to state 86
    INFINITY   shift, and go to state 87
    MIN        shift, and go to state 88
    MAX        shift, and go to state 89
    IF         shift, and go to state 90
    CARD       shift, and go to state 91
    ORD        shift, and go to state 92
    SUM        shift, and go to state 93
    PROD       shift, and go to state 94
    LBRACKET   shift, and go to state 95
    '!'        shift, and go to state 96

    identifier    go to state 97
    iditem        go to state 65
    expr          go to state 150
    func          go to state 100
    reduction_op  go to state 101
    value         go to state 102


state 112

   66 vardef: VAR ID indexing_opt @6 . varattributes

    $default  reduce using rule 86 (varattributes)

    varattributes  go to state 151


state 113

   62 setdef: SET ID indexing_opt @4 . setattributes

    $default  reduce using rule 70 (setattributes)

    setattributes  go to state 152


state 114

   43 cnstr: MAXIMIZE ID indexing_opt @1 . COLON expr

    COLON  shift, and go to state 153


state 115

   45 cnstr: MINIMIZE ID indexing_opt @2 . COLON expr

    COLON  shift, and go to state 154


state 116

   47 cnstr: SUBJECTTO ID indexing_opt @3 . COLON equation

    COLON  shift, and go to state 155


state 117

   17 coreblock: BEG CORE statements END . CORE

    CORE  shift, and go to state 156


state 118

   15 blockblockbegin: BLOCK ID indexing_opt COLON .

    $default  reduce using rule 15 (blockblockbegin)


state 119

    9 modelblockend: END MODEL .

    $default  reduce using rule 9 (modelblockend)


state 120

   16 blockblockend: END BLOCK . SEMICOLON

    SEMICOLON  shift, and go to state 157


state 121

   64 paramdef: qualifier PARAM ID indexing_opt . @5 paramattributes

    $default  reduce using rule 63 (@5)

    @5  go to state 158


state 122

   13 commasepoptions: ID COMMA . commasepoptions

    ID  shift, and go to state 81

    commasepoptions  go to state 159


state 123

   11 optionlist: LBRACKET commasepoptions RBRACKET .

    $default  reduce using rule 11 (optionlist)


state 124

  105 iditem: ID LSBRACKET expr_list . RSBRACKET
  107 expr_list: expr_list . COMMA expr

    COMMA      shift, and go to state 132
    RSBRACKET  shift, and go to state 160


state 125

   59 lexpr: LBRACKET . lexpr RBRACKET
  109 expr: LBRACKET . expr_list RBRACKET

    ID         shift, and go to state 66
    INT_VAL    shift, and go to state 85
    FLOAT_VAL  shift, and go to state 86
    INFINITY   shift, and go to state 87
    MIN        shift, and go to state 88
    MAX        shift, and go to state 89
    IF         shift, and go to state 90
    CARD       shift, and go to state 91
    ORD        shift, and go to state 92
    SUM        shift, and go to state 93
    PROD       shift, and go to state 94
    LBRACKET   shift, and go to state 125
    '!'        shift, and go to state 96

    equation      go to state 126
    lexpr         go to state 161
    identifier    go to state 97
    iditem        go to state 65
    expr_list     go to state 129
    expr          go to state 162
    func          go to state 100
    reduction_op  go to state 101
    value         go to state 102


state 126

   60 lexpr: equation .

    $default  reduce using rule 60 (lexpr)


state 127

  121 expr: IF lexpr . THEN expr
  122     | IF lexpr . THEN expr ELSE expr

    THEN  shift, and go to state 163


state 128

   36 equation: expr . ASSIGN expr
   37         | expr . LT expr
   38         | expr . LE expr
   39         | expr . GT expr
   40         | expr . GE expr
   41         | expr . EQ expr
   58 lexpr: expr .
  110 expr: expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '*' expr
  113     | expr . '/' expr
  114     | expr . POWER expr
  115     | expr . ELLIPSE expr
  116     | expr . LOGICAL_OR expr
  117     | expr . LOGICAL_AND expr

    POWER        shift, and go to state 133
    LE           shift, and go to state 164
    GE           shift, and go to state 165
    EQ           shift, and go to state 166
    LT           shift, and go to state 167
    GT           shift, and go to state 168
    LOGICAL_OR   shift, and go to state 134
    LOGICAL_AND  shift, and go to state 135
    ELLIPSE      shift, and go to state 136
    ASSIGN       shift, and go to state 169
    '+'          shift, and go to state 137
    '-'          shift, and go to state 138
    '*'          shift, and go to state 139
    '/'          shift, and go to state 140

    $default  reduce using rule 58 (lexpr)


state 129

  107 expr_list: expr_list . COMMA expr
  109 expr: LBRACKET expr_list . RBRACKET

    COMMA     shift, and go to state 132
    RBRACKET  shift, and go to state 170


state 130

  110 expr: expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '*' expr
  113     | expr . '/' expr
  114     | expr . POWER expr
  115     | expr . ELLIPSE expr
  116     | expr . LOGICAL_OR expr
  117     | expr . LOGICAL_AND expr
  118     | '!' expr .

    ELLIPSE  shift, and go to state 136

    $default  reduce using rule 118 (expr)


state 131

   98 setexpression: LBRACE expr_list RBRACE .

    $default  reduce using rule 98 (setexpression)


state 132

  107 expr_list: expr_list COMMA . expr

    ID         shift, and go to state 66
    INT_VAL    shift, and go to state 85
    FLOAT_VAL  shift, and go to state 86
    INFINITY   shift, and go to state 87
    MIN        shift, and go to state 88
    MAX        shift, and go to state 89
    IF         shift, and go to state 90
    CARD       shift, and go to state 91
    ORD        shift, and go to state 92
    SUM        shift, and go to state 93
    PROD       shift, and go to state 94
    LBRACKET   shift, and go to state 95
    '!'        shift, and go to state 96

    identifier    go to state 97
    iditem        go to state 65
    expr          go to state 171
    func          go to state 100
    reduction_op  go to state 101
    value         go to state 102


state 133

  114 expr: expr POWER . expr

    ID         shift, and go to state 66
    INT_VAL    shift, and go to state 85
    FLOAT_VAL  shift, and go to state 86
    INFINITY   shift, and go to state 87
    MIN        shift, and go to state 88
    MAX        shift, and go to state 89
    IF         shift, and go to state 90
    CARD       shift, and go to state 91
    ORD        shift, and go to state 92
    SUM        shift, and go to state 93
    PROD       shift, and go to state 94
    LBRACKET   shift, and go to state 95
    '!'        shift, and go to state 96

    identifier    go to state 97
    iditem        go to state 65
    expr          go to state 172
    func          go to state 100
    reduction_op  go to state 101
    value         go to state 102


state 134

  116 expr: expr LOGICAL_OR . expr

    ID         shift, and go to state 66
    INT_VAL    shift, and go to state 85
    FLOAT_VAL  shift, and go to state 86
    INFINITY   shift, and go to state 87
    MIN        shift, and go to state 88
    MAX        shift, and go to state 89
    IF         shift, and go to state 90
    CARD       shift, and go to state 91
    ORD        shift, and go to state 92
    SUM        shift, and go to state 93
    PROD       shift, and go to state 94
    LBRACKET   shift, and go to state 95
    '!'        shift, and go to state 96

    identifier    go to state 97
    iditem        go to state 65
    expr          go to state 173
    func          go to state 100
    reduction_op  go to state 101
    value         go to state 102


state 135

  117 expr: expr LOGICAL_AND . expr

    ID         shift, and go to state 66
    INT_VAL    shift, and go to state 85
    FLOAT_VAL  shift, and go to state 86
    INFINITY   shift, and go to state 87
    MIN        shift, and go to state 88
    MAX        shift, and go to state 89
    IF         shift, and go to state 90
    CARD       shift, and go to state 91
    ORD        shift, and go to state 92
    SUM        shift, and go to state 93
    PROD       shift, and go to state 94
    LBRACKET   shift, and go to state 95
    '!'        shift, and go to state 96

    identifier    go to state 97
    iditem        go to state 65
    expr          go to state 174
    func          go to state 100
    reduction_op  go to state 101
    value         go to state 102


state 136

  115 expr: expr ELLIPSE . expr

    ID         shift, and go to state 66
    INT_VAL    shift, and go to state 85
    FLOAT_VAL  shift, and go to state 86
    INFINITY   shift, and go to state 87
    MIN        shift, and go to state 88
    MAX        shift, and go to state 89
    IF         shift, and go to state 90
    CARD       shift, and go to state 91
    ORD        shift, and go to state 92
    SUM        shift, and go to state 93
    PROD       shift, and go to state 94
    LBRACKET   shift, and go to state 95
    '!'        shift, and go to state 96

    identifier    go to state 97
    iditem        go to state 65
    expr          go to state 175
    func          go to state 100
    reduction_op  go to state 101
    value         go to state 102


state 137

  110 expr: expr '+' . expr

    ID         shift, and go to state 66
    INT_VAL    shift, and go to state 85
    FLOAT_VAL  shift, and go to state 86
    INFINITY   shift, and go to state 87
    MIN        shift, and go to state 88
    MAX        shift, and go to state 89
    IF         shift, and go to state 90
    CARD       shift, and go to state 91
    ORD        shift, and go to state 92
    SUM        shift, and go to state 93
    PROD       shift, and go to state 94
    LBRACKET   shift, and go to state 95
    '!'        shift, and go to state 96

    identifier    go to state 97
    iditem        go to state 65
    expr          go to state 176
    func          go to state 100
    reduction_op  go to state 101
    value         go to state 102


state 138

  111 expr: expr '-' . expr

    ID         shift, and go to state 66
    INT_VAL    shift, and go to state 85
    FLOAT_VAL  shift, and go to state 86
    INFINITY   shift, and go to state 87
    MIN        shift, and go to state 88
    MAX        shift, and go to state 89
    IF         shift, and go to state 90
    CARD       shift, and go to state 91
    ORD        shift, and go to state 92
    SUM        shift, and go to state 93
    PROD       shift, and go to state 94
    LBRACKET   shift, and go to state 95
    '!'        shift, and go to state 96

    identifier    go to state 97
    iditem        go to state 65
    expr          go to state 177
    func          go to state 100
    reduction_op  go to state 101
    value         go to state 102


state 139

  112 expr: expr '*' . expr

    ID         shift, and go to state 66
    INT_VAL    shift, and go to state 85
    FLOAT_VAL  shift, and go to state 86
    INFINITY   shift, and go to state 87
    MIN        shift, and go to state 88
    MAX        shift, and go to state 89
    IF         shift, and go to state 90
    CARD       shift, and go to state 91
    ORD        shift, and go to state 92
    SUM        shift, and go to state 93
    PROD       shift, and go to state 94
    LBRACKET   shift, and go to state 95
    '!'        shift, and go to state 96

    identifier    go to state 97
    iditem        go to state 65
    expr          go to state 178
    func          go to state 100
    reduction_op  go to state 101
    value         go to state 102


state 140

  113 expr: expr '/' . expr

    ID         shift, and go to state 66
    INT_VAL    shift, and go to state 85
    FLOAT_VAL  shift, and go to state 86
    INFINITY   shift, and go to state 87
    MIN        shift, and go to state 88
    MAX        shift, and go to state 89
    IF         shift, and go to state 90
    CARD       shift, and go to state 91
    ORD        shift, and go to state 92
    SUM        shift, and go to state 93
    PROD       shift, and go to state 94
    LBRACKET   shift, and go to state 95
    '!'        shift, and go to state 96

    identifier    go to state 97
    iditem        go to state 65
    expr          go to state 179
    func          go to state 100
    reduction_op  go to state 101
    value         go to state 102


state 141

  123 expr: func LBRACKET . expr_list RBRACKET

    ID         shift, and go to state 66
    INT_VAL    shift, and go to state 85
    FLOAT_VAL  shift, and go to state 86
    INFINITY   shift, and go to state 87
    MIN        shift, and go to state 88
    MAX        shift, and go to state 89
    IF         shift, and go to state 90
    CARD       shift, and go to state 91
    ORD        shift, and go to state 92
    SUM        shift, and go to state 93
    PROD       shift, and go to state 94
    LBRACKET   shift, and go to state 95
    '!'        shift, and go to state 96

    identifier    go to state 97
    iditem        go to state 65
    expr_list     go to state 180
    expr          go to state 99
    func          go to state 100
    reduction_op  go to state 101
    value         go to state 102


state 142

  120 expr: reduction_op indexing . @7 expr

    $default  reduce using rule 119 (@7)

    @7  go to state 181


state 143

   57 dummy_member: LBRACKET ID COMMA . ID RBRACKET

    ID  shift, and go to state 182


state 144

   53 setexpr_list: setexpr_list COMMA setexpr_item .

    $default  reduce using rule 53 (setexpr_list)


state 145

   50 indexing: LBRACE setexpr_list COLON lexpr . RBRACE

    RBRACE  shift, and go to state 183


state 146

   55 setexpr_item: dummy_member IN setexpression .
  100 setexpression: setexpression . CROSS setexpression
  101              | setexpression . DIFF setexpression

    DIFF   shift, and go to state 108
    CROSS  shift, and go to state 109

    $default  reduce using rule 55 (setexpr_item)


state 147

  100 setexpression: setexpression . CROSS setexpression
  101              | setexpression . DIFF setexpression
  101              | setexpression DIFF setexpression .

    DIFF   shift, and go to state 108
    CROSS  shift, and go to state 109

    DIFF      [reduce using rule 101 (setexpression)]
    CROSS     [reduce using rule 101 (setexpression)]
    $default  reduce using rule 101 (setexpression)


state 148

  100 setexpression: setexpression . CROSS setexpression
  100              | setexpression CROSS setexpression .
  101              | setexpression . DIFF setexpression

    DIFF   shift, and go to state 108
    CROSS  shift, and go to state 109

    DIFF      [reduce using rule 100 (setexpression)]
    CROSS     [reduce using rule 100 (setexpression)]
    $default  reduce using rule 100 (setexpression)


state 149

  103 identifier: identifier DOT iditem .

    $default  reduce using rule 103 (identifier)


state 150

   28 command: LET indexing identifier DEFINED expr .
  110 expr: expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '*' expr
  113     | expr . '/' expr
  114     | expr . POWER expr
  115     | expr . ELLIPSE expr
  116     | expr . LOGICAL_OR expr
  117     | expr . LOGICAL_AND expr

    POWER        shift, and go to state 133
    LOGICAL_OR   shift, and go to state 134
    LOGICAL_AND  shift, and go to state 135
    ELLIPSE      shift, and go to state 136
    '+'          shift, and go to state 137
    '-'          shift, and go to state 138
    '*'          shift, and go to state 139
    '/'          shift, and go to state 140

    $default  reduce using rule 28 (command)


state 151

   66 vardef: VAR ID indexing_opt @6 varattributes .
   87 varattributes: varattributes . varattribute

    DEFAULT   shift, and go to state 184
    SYMBOLIC  shift, and go to state 185
    INTEGER   shift, and go to state 186
    BINARY    shift, and go to state 187
    IN        shift, and go to state 188
    LE        shift, and go to state 189
    GE        shift, and go to state 190
    DEFINED   shift, and go to state 191
    SUFFIX    shift, and go to state 192
    ASSIGN    shift, and go to state 193

    $default  reduce using rule 66 (vardef)

    varattribute  go to state 194


state 152

   62 setdef: SET ID indexing_opt @4 setattributes .
   71 setattributes: setattributes . setattribute

    DEFAULT  shift, and go to state 195
    DIMEN    shift, and go to state 196
    ORDERED  shift, and go to state 197
    WITHIN   shift, and go to state 198
    ASSIGN   shift, and go to state 199

    $default  reduce using rule 62 (setdef)

    setattribute  go to state 200


state 153

   43 cnstr: MAXIMIZE ID indexing_opt @1 COLON . expr

    ID         shift, and go to state 66
    INT_VAL    shift, and go to state 85
    FLOAT_VAL  shift, and go to state 86
    INFINITY   shift, and go to state 87
    MIN        shift, and go to state 88
    MAX        shift, and go to state 89
    IF         shift, and go to state 90
    CARD       shift, and go to state 91
    ORD        shift, and go to state 92
    SUM        shift, and go to state 93
    PROD       shift, and go to state 94
    LBRACKET   shift, and go to state 95
    '!'        shift, and go to state 96

    identifier    go to state 97
    iditem        go to state 65
    expr          go to state 201
    func          go to state 100
    reduction_op  go to state 101
    value         go to state 102


state 154

   45 cnstr: MINIMIZE ID indexing_opt @2 COLON . expr

    ID         shift, and go to state 66
    INT_VAL    shift, and go to state 85
    FLOAT_VAL  shift, and go to state 86
    INFINITY   shift, and go to state 87
    MIN        shift, and go to state 88
    MAX        shift, and go to state 89
    IF         shift, and go to state 90
    CARD       shift, and go to state 91
    ORD        shift, and go to state 92
    SUM        shift, and go to state 93
    PROD       shift, and go to state 94
    LBRACKET   shift, and go to state 95
    '!'        shift, and go to state 96

    identifier    go to state 97
    iditem        go to state 65
    expr          go to state 202
    func          go to state 100
    reduction_op  go to state 101
    value         go to state 102


state 155

   47 cnstr: SUBJECTTO ID indexing_opt @3 COLON . equation

    ID         shift, and go to state 66
    INT_VAL    shift, and go to state 85
    FLOAT_VAL  shift, and go to state 86
    INFINITY   shift, and go to state 87
    MIN        shift, and go to state 88
    MAX        shift, and go to state 89
    IF         shift, and go to state 90
    CARD       shift, and go to state 91
    ORD        shift, and go to state 92
    SUM        shift, and go to state 93
    PROD       shift, and go to state 94
    LBRACKET   shift, and go to state 95
    '!'        shift, and go to state 96

    equation      go to state 203
    identifier    go to state 97
    iditem        go to state 65
    expr          go to state 204
    func          go to state 100
    reduction_op  go to state 101
    value         go to state 102


state 156

   17 coreblock: BEG CORE statements END CORE .

    $default  reduce using rule 17 (coreblock)


state 157

   16 blockblockend: END BLOCK SEMICOLON .

    $default  reduce using rule 16 (blockblockend)


state 158

   64 paramdef: qualifier PARAM ID indexing_opt @5 . paramattributes

    $default  reduce using rule 77 (paramattributes)

    paramattributes  go to state 205


state 159

   13 commasepoptions: ID COMMA commasepoptions .

    $default  reduce using rule 13 (commasepoptions)


state 160

  105 iditem: ID LSBRACKET expr_list RSBRACKET .

    $default  reduce using rule 105 (iditem)


state 161

   59 lexpr: LBRACKET lexpr . RBRACKET

    RBRACKET  shift, and go to state 206


state 162

   36 equation: expr . ASSIGN expr
   37         | expr . LT expr
   38         | expr . LE expr
   39         | expr . GT expr
   40         | expr . GE expr
   41         | expr . EQ expr
   58 lexpr: expr .
  106 expr_list: expr .
  110 expr: expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '*' expr
  113     | expr . '/' expr
  114     | expr . POWER expr
  115     | expr . ELLIPSE expr
  116     | expr . LOGICAL_OR expr
  117     | expr . LOGICAL_AND expr

    POWER        shift, and go to state 133
    LE           shift, and go to state 164
    GE           shift, and go to state 165
    EQ           shift, and go to state 166
    LT           shift, and go to state 167
    GT           shift, and go to state 168
    LOGICAL_OR   shift, and go to state 134
    LOGICAL_AND  shift, and go to state 135
    ELLIPSE      shift, and go to state 136
    ASSIGN       shift, and go to state 169
    '+'          shift, and go to state 137
    '-'          shift, and go to state 138
    '*'          shift, and go to state 139
    '/'          shift, and go to state 140

    COMMA     reduce using rule 106 (expr_list)
    RBRACKET  reduce using rule 58 (lexpr)
    RBRACKET  [reduce using rule 106 (expr_list)]
    $default  reduce using rule 58 (lexpr)


state 163

  121 expr: IF lexpr THEN . expr
  122     | IF lexpr THEN . expr ELSE expr

    ID         shift, and go to state 66
    INT_VAL    shift, and go to state 85
    FLOAT_VAL  shift, and go to state 86
    INFINITY   shift, and go to state 87
    MIN        shift, and go to state 88
    MAX        shift, and go to state 89
    IF         shift, and go to state 90
    CARD       shift, and go to state 91
    ORD        shift, and go to state 92
    SUM        shift, and go to state 93
    PROD       shift, and go to state 94
    LBRACKET   shift, and go to state 95
    '!'        shift, and go to state 96

    identifier    go to state 97
    iditem        go to state 65
    expr          go to state 207
    func          go to state 100
    reduction_op  go to state 101
    value         go to state 102


state 164

   38 equation: expr LE . expr

    ID         shift, and go to state 66
    INT_VAL    shift, and go to state 85
    FLOAT_VAL  shift, and go to state 86
    INFINITY   shift, and go to state 87
    MIN        shift, and go to state 88
    MAX        shift, and go to state 89
    IF         shift, and go to state 90
    CARD       shift, and go to state 91
    ORD        shift, and go to state 92
    SUM        shift, and go to state 93
    PROD       shift, and go to state 94
    LBRACKET   shift, and go to state 95
    '!'        shift, and go to state 96

    identifier    go to state 97
    iditem        go to state 65
    expr          go to state 208
    func          go to state 100
    reduction_op  go to state 101
    value         go to state 102


state 165

   40 equation: expr GE . expr

    ID         shift, and go to state 66
    INT_VAL    shift, and go to state 85
    FLOAT_VAL  shift, and go to state 86
    INFINITY   shift, and go to state 87
    MIN        shift, and go to state 88
    MAX        shift, and go to state 89
    IF         shift, and go to state 90
    CARD       shift, and go to state 91
    ORD        shift, and go to state 92
    SUM        shift, and go to state 93
    PROD       shift, and go to state 94
    LBRACKET   shift, and go to state 95
    '!'        shift, and go to state 96

    identifier    go to state 97
    iditem        go to state 65
    expr          go to state 209
    func          go to state 100
    reduction_op  go to state 101
    value         go to state 102


state 166

   41 equation: expr EQ . expr

    ID         shift, and go to state 66
    INT_VAL    shift, and go to state 85
    FLOAT_VAL  shift, and go to state 86
    INFINITY   shift, and go to state 87
    MIN        shift, and go to state 88
    MAX        shift, and go to state 89
    IF         shift, and go to state 90
    CARD       shift, and go to state 91
    ORD        shift, and go to state 92
    SUM        shift, and go to state 93
    PROD       shift, and go to state 94
    LBRACKET   shift, and go to state 95
    '!'        shift, and go to state 96

    identifier    go to state 97
    iditem        go to state 65
    expr          go to state 210
    func          go to state 100
    reduction_op  go to state 101
    value         go to state 102


state 167

   37 equation: expr LT . expr

    ID         shift, and go to state 66
    INT_VAL    shift, and go to state 85
    FLOAT_VAL  shift, and go to state 86
    INFINITY   shift, and go to state 87
    MIN        shift, and go to state 88
    MAX        shift, and go to state 89
    IF         shift, and go to state 90
    CARD       shift, and go to state 91
    ORD        shift, and go to state 92
    SUM        shift, and go to state 93
    PROD       shift, and go to state 94
    LBRACKET   shift, and go to state 95
    '!'        shift, and go to state 96

    identifier    go to state 97
    iditem        go to state 65
    expr          go to state 211
    func          go to state 100
    reduction_op  go to state 101
    value         go to state 102


state 168

   39 equation: expr GT . expr

    ID         shift, and go to state 66
    INT_VAL    shift, and go to state 85
    FLOAT_VAL  shift, and go to state 86
    INFINITY   shift, and go to state 87
    MIN        shift, and go to state 88
    MAX        shift, and go to state 89
    IF         shift, and go to state 90
    CARD       shift, and go to state 91
    ORD        shift, and go to state 92
    SUM        shift, and go to state 93
    PROD       shift, and go to state 94
    LBRACKET   shift, and go to state 95
    '!'        shift, and go to state 96

    identifier    go to state 97
    iditem        go to state 65
    expr          go to state 212
    func          go to state 100
    reduction_op  go to state 101
    value         go to state 102


state 169

   36 equation: expr ASSIGN . expr

    ID         shift, and go to state 66
    INT_VAL    shift, and go to state 85
    FLOAT_VAL  shift, and go to state 86
    INFINITY   shift, and go to state 87
    MIN        shift, and go to state 88
    MAX        shift, and go to state 89
    IF         shift, and go to state 90
    CARD       shift, and go to state 91
    ORD        shift, and go to state 92
    SUM        shift, and go to state 93
    PROD       shift, and go to state 94
    LBRACKET   shift, and go to state 95
    '!'        shift, and go to state 96

    identifier    go to state 97
    iditem        go to state 65
    expr          go to state 213
    func          go to state 100
    reduction_op  go to state 101
    value         go to state 102


state 170

  109 expr: LBRACKET expr_list RBRACKET .

    $default  reduce using rule 109 (expr)


state 171

  107 expr_list: expr_list COMMA expr .
  110 expr: expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '*' expr
  113     | expr . '/' expr
  114     | expr . POWER expr
  115     | expr . ELLIPSE expr
  116     | expr . LOGICAL_OR expr
  117     | expr . LOGICAL_AND expr

    POWER        shift, and go to state 133
    LOGICAL_OR   shift, and go to state 134
    LOGICAL_AND  shift, and go to state 135
    ELLIPSE      shift, and go to state 136
    '+'          shift, and go to state 137
    '-'          shift, and go to state 138
    '*'          shift, and go to state 139
    '/'          shift, and go to state 140

    $default  reduce using rule 107 (expr_list)


state 172

  110 expr: expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '*' expr
  113     | expr . '/' expr
  114     | expr . POWER expr
  114     | expr POWER expr .
  115     | expr . ELLIPSE expr
  116     | expr . LOGICAL_OR expr
  117     | expr . LOGICAL_AND expr

    POWER    shift, and go to state 133
    ELLIPSE  shift, and go to state 136

    $default  reduce using rule 114 (expr)


state 173

  110 expr: expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '*' expr
  113     | expr . '/' expr
  114     | expr . POWER expr
  115     | expr . ELLIPSE expr
  116     | expr . LOGICAL_OR expr
  116     | expr LOGICAL_OR expr .
  117     | expr . LOGICAL_AND expr

    POWER        shift, and go to state 133
    LOGICAL_AND  shift, and go to state 135
    ELLIPSE      shift, and go to state 136
    '+'          shift, and go to state 137
    '-'          shift, and go to state 138
    '*'          shift, and go to state 139
    '/'          shift, and go to state 140

    $default  reduce using rule 116 (expr)


state 174

  110 expr: expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '*' expr
  113     | expr . '/' expr
  114     | expr . POWER expr
  115     | expr . ELLIPSE expr
  116     | expr . LOGICAL_OR expr
  117     | expr . LOGICAL_AND expr
  117     | expr LOGICAL_AND expr .

    POWER    shift, and go to state 133
    ELLIPSE  shift, and go to state 136
    '+'      shift, and go to state 137
    '-'      shift, and go to state 138
    '*'      shift, and go to state 139
    '/'      shift, and go to state 140

    $default  reduce using rule 117 (expr)


state 175

  110 expr: expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '*' expr
  113     | expr . '/' expr
  114     | expr . POWER expr
  115     | expr . ELLIPSE expr
  115     | expr ELLIPSE expr .
  116     | expr . LOGICAL_OR expr
  117     | expr . LOGICAL_AND expr

    $default  reduce using rule 115 (expr)


state 176

  110 expr: expr . '+' expr
  110     | expr '+' expr .
  111     | expr . '-' expr
  112     | expr . '*' expr
  113     | expr . '/' expr
  114     | expr . POWER expr
  115     | expr . ELLIPSE expr
  116     | expr . LOGICAL_OR expr
  117     | expr . LOGICAL_AND expr

    POWER    shift, and go to state 133
    ELLIPSE  shift, and go to state 136
    '*'      shift, and go to state 139
    '/'      shift, and go to state 140

    $default  reduce using rule 110 (expr)


state 177

  110 expr: expr . '+' expr
  111     | expr . '-' expr
  111     | expr '-' expr .
  112     | expr . '*' expr
  113     | expr . '/' expr
  114     | expr . POWER expr
  115     | expr . ELLIPSE expr
  116     | expr . LOGICAL_OR expr
  117     | expr . LOGICAL_AND expr

    POWER    shift, and go to state 133
    ELLIPSE  shift, and go to state 136
    '*'      shift, and go to state 139
    '/'      shift, and go to state 140

    $default  reduce using rule 111 (expr)


state 178

  110 expr: expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '*' expr
  112     | expr '*' expr .
  113     | expr . '/' expr
  114     | expr . POWER expr
  115     | expr . ELLIPSE expr
  116     | expr . LOGICAL_OR expr
  117     | expr . LOGICAL_AND expr

    POWER    shift, and go to state 133
    ELLIPSE  shift, and go to state 136

    $default  reduce using rule 112 (expr)


state 179

  110 expr: expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '*' expr
  113     | expr . '/' expr
  113     | expr '/' expr .
  114     | expr . POWER expr
  115     | expr . ELLIPSE expr
  116     | expr . LOGICAL_OR expr
  117     | expr . LOGICAL_AND expr

    POWER    shift, and go to state 133
    ELLIPSE  shift, and go to state 136

    $default  reduce using rule 113 (expr)


state 180

  107 expr_list: expr_list . COMMA expr
  123 expr: func LBRACKET expr_list . RBRACKET

    COMMA     shift, and go to state 132
    RBRACKET  shift, and go to state 214


state 181

  120 expr: reduction_op indexing @7 . expr

    ID         shift, and go to state 66
    INT_VAL    shift, and go to state 85
    FLOAT_VAL  shift, and go to state 86
    INFINITY   shift, and go to state 87
    MIN        shift, and go to state 88
    MAX        shift, and go to state 89
    IF         shift, and go to state 90
    CARD       shift, and go to state 91
    ORD        shift, and go to state 92
    SUM        shift, and go to state 93
    PROD       shift, and go to state 94
    LBRACKET   shift, and go to state 95
    '!'        shift, and go to state 96

    identifier    go to state 97
    iditem        go to state 65
    expr          go to state 215
    func          go to state 100
    reduction_op  go to state 101
    value         go to state 102


state 182

   57 dummy_member: LBRACKET ID COMMA ID . RBRACKET

    RBRACKET  shift, and go to state 216


state 183

   50 indexing: LBRACE setexpr_list COLON lexpr RBRACE .

    $default  reduce using rule 50 (indexing)


state 184

   95 varattribute: DEFAULT . expr

    ID         shift, and go to state 66
    INT_VAL    shift, and go to state 85
    FLOAT_VAL  shift, and go to state 86
    INFINITY   shift, and go to state 87
    MIN        shift, and go to state 88
    MAX        shift, and go to state 89
    IF         shift, and go to state 90
    CARD       shift, and go to state 91
    ORD        shift, and go to state 92
    SUM        shift, and go to state 93
    PROD       shift, and go to state 94
    LBRACKET   shift, and go to state 95
    '!'        shift, and go to state 96

    identifier    go to state 97
    iditem        go to state 65
    expr          go to state 217
    func          go to state 100
    reduction_op  go to state 101
    value         go to state 102


state 185

   90 varattribute: SYMBOLIC .

    $default  reduce using rule 90 (varattribute)


state 186

   89 varattribute: INTEGER .

    $default  reduce using rule 89 (varattribute)


state 187

   88 varattribute: BINARY .

    $default  reduce using rule 88 (varattribute)


state 188

   96 varattribute: IN . setexpression

    ID      shift, and go to state 66
    LBRACE  shift, and go to state 58

    setexpression  go to state 218
    identifier     go to state 64
    iditem         go to state 65


state 189

   91 varattribute: LE . expr

    ID         shift, and go to state 66
    INT_VAL    shift, and go to state 85
    FLOAT_VAL  shift, and go to state 86
    INFINITY   shift, and go to state 87
    MIN        shift, and go to state 88
    MAX        shift, and go to state 89
    IF         shift, and go to state 90
    CARD       shift, and go to state 91
    ORD        shift, and go to state 92
    SUM        shift, and go to state 93
    PROD       shift, and go to state 94
    LBRACKET   shift, and go to state 95
    '!'        shift, and go to state 96

    identifier    go to state 97
    iditem        go to state 65
    expr          go to state 219
    func          go to state 100
    reduction_op  go to state 101
    value         go to state 102


state 190

   92 varattribute: GE . expr

    ID         shift, and go to state 66
    INT_VAL    shift, and go to state 85
    FLOAT_VAL  shift, and go to state 86
    INFINITY   shift, and go to state 87
    MIN        shift, and go to state 88
    MAX        shift, and go to state 89
    IF         shift, and go to state 90
    CARD       shift, and go to state 91
    ORD        shift, and go to state 92
    SUM        shift, and go to state 93
    PROD       shift, and go to state 94
    LBRACKET   shift, and go to state 95
    '!'        shift, and go to state 96

    identifier    go to state 97
    iditem        go to state 65
    expr          go to state 220
    func          go to state 100
    reduction_op  go to state 101
    value         go to state 102


state 191

   93 varattribute: DEFINED . expr

    ID         shift, and go to state 66
    INT_VAL    shift, and go to state 85
    FLOAT_VAL  shift, and go to state 86
    INFINITY   shift, and go to state 87
    MIN        shift, and go to state 88
    MAX        shift, and go to state 89
    IF         shift, and go to state 90
    CARD       shift, and go to state 91
    ORD        shift, and go to state 92
    SUM        shift, and go to state 93
    PROD       shift, and go to state 94
    LBRACKET   shift, and go to state 95
    '!'        shift, and go to state 96

    identifier    go to state 97
    iditem        go to state 65
    expr          go to state 221
    func          go to state 100
    reduction_op  go to state 101
    value         go to state 102


state 192

   97 varattribute: SUFFIX . ID expr

    ID  shift, and go to state 222


state 193

   94 varattribute: ASSIGN . expr

    ID         shift, and go to state 66
    INT_VAL    shift, and go to state 85
    FLOAT_VAL  shift, and go to state 86
    INFINITY   shift, and go to state 87
    MIN        shift, and go to state 88
    MAX        shift, and go to state 89
    IF         shift, and go to state 90
    CARD       shift, and go to state 91
    ORD        shift, and go to state 92
    SUM        shift, and go to state 93
    PROD       shift, and go to state 94
    LBRACKET   shift, and go to state 95
    '!'        shift, and go to state 96

    identifier    go to state 97
    iditem        go to state 65
    expr          go to state 223
    func          go to state 100
    reduction_op  go to state 101
    value         go to state 102


state 194

   87 varattributes: varattributes varattribute .

    $default  reduce using rule 87 (varattributes)


state 195

   75 setattribute: DEFAULT . setexpression

    ID      shift, and go to state 66
    LBRACE  shift, and go to state 58

    setexpression  go to state 224
    identifier     go to state 64
    iditem         go to state 65


state 196

   72 setattribute: DIMEN . INT_VAL

    INT_VAL  shift, and go to state 225


state 197

   76 setattribute: ORDERED .

    $default  reduce using rule 76 (setattribute)


state 198

   73 setattribute: WITHIN . setexpression

    ID      shift, and go to state 66
    LBRACE  shift, and go to state 58

    setexpression  go to state 226
    identifier     go to state 64
    iditem         go to state 65


state 199

   74 setattribute: ASSIGN . setexpression

    ID      shift, and go to state 66
    LBRACE  shift, and go to state 58

    setexpression  go to state 227
    identifier     go to state 64
    iditem         go to state 65


state 200

   71 setattributes: setattributes setattribute .

    $default  reduce using rule 71 (setattributes)


state 201

   43 cnstr: MAXIMIZE ID indexing_opt @1 COLON expr .
  110 expr: expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '*' expr
  113     | expr . '/' expr
  114     | expr . POWER expr
  115     | expr . ELLIPSE expr
  116     | expr . LOGICAL_OR expr
  117     | expr . LOGICAL_AND expr

    POWER        shift, and go to state 133
    LOGICAL_OR   shift, and go to state 134
    LOGICAL_AND  shift, and go to state 135
    ELLIPSE      shift, and go to state 136
    '+'          shift, and go to state 137
    '-'          shift, and go to state 138
    '*'          shift, and go to state 139
    '/'          shift, and go to state 140

    $default  reduce using rule 43 (cnstr)


state 202

   45 cnstr: MINIMIZE ID indexing_opt @2 COLON expr .
  110 expr: expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '*' expr
  113     | expr . '/' expr
  114     | expr . POWER expr
  115     | expr . ELLIPSE expr
  116     | expr . LOGICAL_OR expr
  117     | expr . LOGICAL_AND expr

    POWER        shift, and go to state 133
    LOGICAL_OR   shift, and go to state 134
    LOGICAL_AND  shift, and go to state 135
    ELLIPSE      shift, and go to state 136
    '+'          shift, and go to state 137
    '-'          shift, and go to state 138
    '*'          shift, and go to state 139
    '/'          shift, and go to state 140

    $default  reduce using rule 45 (cnstr)


state 203

   47 cnstr: SUBJECTTO ID indexing_opt @3 COLON equation .

    $default  reduce using rule 47 (cnstr)


state 204

   36 equation: expr . ASSIGN expr
   37         | expr . LT expr
   38         | expr . LE expr
   39         | expr . GT expr
   40         | expr . GE expr
   41         | expr . EQ expr
  110 expr: expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '*' expr
  113     | expr . '/' expr
  114     | expr . POWER expr
  115     | expr . ELLIPSE expr
  116     | expr . LOGICAL_OR expr
  117     | expr . LOGICAL_AND expr

    POWER        shift, and go to state 133
    LE           shift, and go to state 164
    GE           shift, and go to state 165
    EQ           shift, and go to state 166
    LT           shift, and go to state 167
    GT           shift, and go to state 168
    LOGICAL_OR   shift, and go to state 134
    LOGICAL_AND  shift, and go to state 135
    ELLIPSE      shift, and go to state 136
    ASSIGN       shift, and go to state 169
    '+'          shift, and go to state 137
    '-'          shift, and go to state 138
    '*'          shift, and go to state 139
    '/'          shift, and go to state 140


state 205

   64 paramdef: qualifier PARAM ID indexing_opt @5 paramattributes .
   78 paramattributes: paramattributes . paramattribute

    DEFAULT   shift, and go to state 228
    SYMBOLIC  shift, and go to state 229
    INTEGER   shift, and go to state 230
    BINARY    shift, and go to state 231
    IN        shift, and go to state 232
    NE        shift, and go to state 233
    LE        shift, and go to state 234
    GE        shift, and go to state 235
    EQ        shift, and go to state 236
    LT        shift, and go to state 237
    GT        shift, and go to state 238
    ASSIGN    shift, and go to state 239

    $default  reduce using rule 64 (paramdef)

    relop           go to state 240
    paramattribute  go to state 241


state 206

   59 lexpr: LBRACKET lexpr RBRACKET .

    $default  reduce using rule 59 (lexpr)


state 207

  110 expr: expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '*' expr
  113     | expr . '/' expr
  114     | expr . POWER expr
  115     | expr . ELLIPSE expr
  116     | expr . LOGICAL_OR expr
  117     | expr . LOGICAL_AND expr
  121     | IF lexpr THEN expr .
  122     | IF lexpr THEN expr . ELSE expr

    ELSE         shift, and go to state 242
    POWER        shift, and go to state 133
    LOGICAL_OR   shift, and go to state 134
    LOGICAL_AND  shift, and go to state 135
    ELLIPSE      shift, and go to state 136
    '+'          shift, and go to state 137
    '-'          shift, and go to state 138
    '*'          shift, and go to state 139
    '/'          shift, and go to state 140

    ELSE         [reduce using rule 121 (expr)]
    POWER        [reduce using rule 121 (expr)]
    LOGICAL_OR   [reduce using rule 121 (expr)]
    LOGICAL_AND  [reduce using rule 121 (expr)]
    ELLIPSE      [reduce using rule 121 (expr)]
    '+'          [reduce using rule 121 (expr)]
    '-'          [reduce using rule 121 (expr)]
    '*'          [reduce using rule 121 (expr)]
    '/'          [reduce using rule 121 (expr)]
    $default     reduce using rule 121 (expr)


state 208

   38 equation: expr LE expr .
  110 expr: expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '*' expr
  113     | expr . '/' expr
  114     | expr . POWER expr
  115     | expr . ELLIPSE expr
  116     | expr . LOGICAL_OR expr
  117     | expr . LOGICAL_AND expr

    POWER        shift, and go to state 133
    LOGICAL_OR   shift, and go to state 134
    LOGICAL_AND  shift, and go to state 135
    ELLIPSE      shift, and go to state 136
    '+'          shift, and go to state 137
    '-'          shift, and go to state 138
    '*'          shift, and go to state 139
    '/'          shift, and go to state 140

    $default  reduce using rule 38 (equation)


state 209

   40 equation: expr GE expr .
  110 expr: expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '*' expr
  113     | expr . '/' expr
  114     | expr . POWER expr
  115     | expr . ELLIPSE expr
  116     | expr . LOGICAL_OR expr
  117     | expr . LOGICAL_AND expr

    POWER        shift, and go to state 133
    LOGICAL_OR   shift, and go to state 134
    LOGICAL_AND  shift, and go to state 135
    ELLIPSE      shift, and go to state 136
    '+'          shift, and go to state 137
    '-'          shift, and go to state 138
    '*'          shift, and go to state 139
    '/'          shift, and go to state 140

    $default  reduce using rule 40 (equation)


state 210

   41 equation: expr EQ expr .
  110 expr: expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '*' expr
  113     | expr . '/' expr
  114     | expr . POWER expr
  115     | expr . ELLIPSE expr
  116     | expr . LOGICAL_OR expr
  117     | expr . LOGICAL_AND expr

    POWER        shift, and go to state 133
    LOGICAL_OR   shift, and go to state 134
    LOGICAL_AND  shift, and go to state 135
    ELLIPSE      shift, and go to state 136
    '+'          shift, and go to state 137
    '-'          shift, and go to state 138
    '*'          shift, and go to state 139
    '/'          shift, and go to state 140

    $default  reduce using rule 41 (equation)


state 211

   37 equation: expr LT expr .
  110 expr: expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '*' expr
  113     | expr . '/' expr
  114     | expr . POWER expr
  115     | expr . ELLIPSE expr
  116     | expr . LOGICAL_OR expr
  117     | expr . LOGICAL_AND expr

    POWER        shift, and go to state 133
    LOGICAL_OR   shift, and go to state 134
    LOGICAL_AND  shift, and go to state 135
    ELLIPSE      shift, and go to state 136
    '+'          shift, and go to state 137
    '-'          shift, and go to state 138
    '*'          shift, and go to state 139
    '/'          shift, and go to state 140

    $default  reduce using rule 37 (equation)


state 212

   39 equation: expr GT expr .
  110 expr: expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '*' expr
  113     | expr . '/' expr
  114     | expr . POWER expr
  115     | expr . ELLIPSE expr
  116     | expr . LOGICAL_OR expr
  117     | expr . LOGICAL_AND expr

    POWER        shift, and go to state 133
    LOGICAL_OR   shift, and go to state 134
    LOGICAL_AND  shift, and go to state 135
    ELLIPSE      shift, and go to state 136
    '+'          shift, and go to state 137
    '-'          shift, and go to state 138
    '*'          shift, and go to state 139
    '/'          shift, and go to state 140

    $default  reduce using rule 39 (equation)


state 213

   36 equation: expr ASSIGN expr .
  110 expr: expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '*' expr
  113     | expr . '/' expr
  114     | expr . POWER expr
  115     | expr . ELLIPSE expr
  116     | expr . LOGICAL_OR expr
  117     | expr . LOGICAL_AND expr

    POWER        shift, and go to state 133
    LOGICAL_OR   shift, and go to state 134
    LOGICAL_AND  shift, and go to state 135
    ELLIPSE      shift, and go to state 136
    '+'          shift, and go to state 137
    '-'          shift, and go to state 138
    '*'          shift, and go to state 139
    '/'          shift, and go to state 140

    $default  reduce using rule 36 (equation)


state 214

  123 expr: func LBRACKET expr_list RBRACKET .

    $default  reduce using rule 123 (expr)


state 215

  110 expr: expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '*' expr
  113     | expr . '/' expr
  114     | expr . POWER expr
  115     | expr . ELLIPSE expr
  116     | expr . LOGICAL_OR expr
  117     | expr . LOGICAL_AND expr
  120     | reduction_op indexing @7 expr .

    POWER        shift, and go to state 133
    LOGICAL_OR   shift, and go to state 134
    LOGICAL_AND  shift, and go to state 135
    ELLIPSE      shift, and go to state 136
    '+'          shift, and go to state 137
    '-'          shift, and go to state 138
    '*'          shift, and go to state 139
    '/'          shift, and go to state 140

    POWER        [reduce using rule 120 (expr)]
    LOGICAL_OR   [reduce using rule 120 (expr)]
    LOGICAL_AND  [reduce using rule 120 (expr)]
    ELLIPSE      [reduce using rule 120 (expr)]
    '+'          [reduce using rule 120 (expr)]
    '-'          [reduce using rule 120 (expr)]
    '*'          [reduce using rule 120 (expr)]
    '/'          [reduce using rule 120 (expr)]
    $default     reduce using rule 120 (expr)


state 216

   57 dummy_member: LBRACKET ID COMMA ID RBRACKET .

    $default  reduce using rule 57 (dummy_member)


state 217

   95 varattribute: DEFAULT expr .
  110 expr: expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '*' expr
  113     | expr . '/' expr
  114     | expr . POWER expr
  115     | expr . ELLIPSE expr
  116     | expr . LOGICAL_OR expr
  117     | expr . LOGICAL_AND expr

    POWER        shift, and go to state 133
    LOGICAL_OR   shift, and go to state 134
    LOGICAL_AND  shift, and go to state 135
    ELLIPSE      shift, and go to state 136
    '+'          shift, and go to state 137
    '-'          shift, and go to state 138
    '*'          shift, and go to state 139
    '/'          shift, and go to state 140

    $default  reduce using rule 95 (varattribute)


state 218

   96 varattribute: IN setexpression .
  100 setexpression: setexpression . CROSS setexpression
  101              | setexpression . DIFF setexpression

    DIFF   shift, and go to state 108
    CROSS  shift, and go to state 109

    $default  reduce using rule 96 (varattribute)


state 219

   91 varattribute: LE expr .
  110 expr: expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '*' expr
  113     | expr . '/' expr
  114     | expr . POWER expr
  115     | expr . ELLIPSE expr
  116     | expr . LOGICAL_OR expr
  117     | expr . LOGICAL_AND expr

    POWER        shift, and go to state 133
    LOGICAL_OR   shift, and go to state 134
    LOGICAL_AND  shift, and go to state 135
    ELLIPSE      shift, and go to state 136
    '+'          shift, and go to state 137
    '-'          shift, and go to state 138
    '*'          shift, and go to state 139
    '/'          shift, and go to state 140

    $default  reduce using rule 91 (varattribute)


state 220

   92 varattribute: GE expr .
  110 expr: expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '*' expr
  113     | expr . '/' expr
  114     | expr . POWER expr
  115     | expr . ELLIPSE expr
  116     | expr . LOGICAL_OR expr
  117     | expr . LOGICAL_AND expr

    POWER        shift, and go to state 133
    LOGICAL_OR   shift, and go to state 134
    LOGICAL_AND  shift, and go to state 135
    ELLIPSE      shift, and go to state 136
    '+'          shift, and go to state 137
    '-'          shift, and go to state 138
    '*'          shift, and go to state 139
    '/'          shift, and go to state 140

    $default  reduce using rule 92 (varattribute)


state 221

   93 varattribute: DEFINED expr .
  110 expr: expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '*' expr
  113     | expr . '/' expr
  114     | expr . POWER expr
  115     | expr . ELLIPSE expr
  116     | expr . LOGICAL_OR expr
  117     | expr . LOGICAL_AND expr

    POWER        shift, and go to state 133
    LOGICAL_OR   shift, and go to state 134
    LOGICAL_AND  shift, and go to state 135
    ELLIPSE      shift, and go to state 136
    '+'          shift, and go to state 137
    '-'          shift, and go to state 138
    '*'          shift, and go to state 139
    '/'          shift, and go to state 140

    $default  reduce using rule 93 (varattribute)


state 222

   97 varattribute: SUFFIX ID . expr

    ID         shift, and go to state 66
    INT_VAL    shift, and go to state 85
    FLOAT_VAL  shift, and go to state 86
    INFINITY   shift, and go to state 87
    MIN        shift, and go to state 88
    MAX        shift, and go to state 89
    IF         shift, and go to state 90
    CARD       shift, and go to state 91
    ORD        shift, and go to state 92
    SUM        shift, and go to state 93
    PROD       shift, and go to state 94
    LBRACKET   shift, and go to state 95
    '!'        shift, and go to state 96

    identifier    go to state 97
    iditem        go to state 65
    expr          go to state 243
    func          go to state 100
    reduction_op  go to state 101
    value         go to state 102


state 223

   94 varattribute: ASSIGN expr .
  110 expr: expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '*' expr
  113     | expr . '/' expr
  114     | expr . POWER expr
  115     | expr . ELLIPSE expr
  116     | expr . LOGICAL_OR expr
  117     | expr . LOGICAL_AND expr

    POWER        shift, and go to state 133
    LOGICAL_OR   shift, and go to state 134
    LOGICAL_AND  shift, and go to state 135
    ELLIPSE      shift, and go to state 136
    '+'          shift, and go to state 137
    '-'          shift, and go to state 138
    '*'          shift, and go to state 139
    '/'          shift, and go to state 140

    $default  reduce using rule 94 (varattribute)


state 224

   75 setattribute: DEFAULT setexpression .
  100 setexpression: setexpression . CROSS setexpression
  101              | setexpression . DIFF setexpression

    DIFF   shift, and go to state 108
    CROSS  shift, and go to state 109

    $default  reduce using rule 75 (setattribute)


state 225

   72 setattribute: DIMEN INT_VAL .

    $default  reduce using rule 72 (setattribute)


state 226

   73 setattribute: WITHIN setexpression .
  100 setexpression: setexpression . CROSS setexpression
  101              | setexpression . DIFF setexpression

    DIFF   shift, and go to state 108
    CROSS  shift, and go to state 109

    $default  reduce using rule 73 (setattribute)


state 227

   74 setattribute: ASSIGN setexpression .
  100 setexpression: setexpression . CROSS setexpression
  101              | setexpression . DIFF setexpression

    DIFF   shift, and go to state 108
    CROSS  shift, and go to state 109

    $default  reduce using rule 74 (setattribute)


state 228

   85 paramattribute: DEFAULT . expr

    ID         shift, and go to state 66
    INT_VAL    shift, and go to state 85
    FLOAT_VAL  shift, and go to state 86
    INFINITY   shift, and go to state 87
    MIN        shift, and go to state 88
    MAX        shift, and go to state 89
    IF         shift, and go to state 90
    CARD       shift, and go to state 91
    ORD        shift, and go to state 92
    SUM        shift, and go to state 93
    PROD       shift, and go to state 94
    LBRACKET   shift, and go to state 95
    '!'        shift, and go to state 96

    identifier    go to state 97
    iditem        go to state 65
    expr          go to state 244
    func          go to state 100
    reduction_op  go to state 101
    value         go to state 102


state 229

   81 paramattribute: SYMBOLIC .

    $default  reduce using rule 81 (paramattribute)


state 230

   80 paramattribute: INTEGER .

    $default  reduce using rule 80 (paramattribute)


state 231

   79 paramattribute: BINARY .

    $default  reduce using rule 79 (paramattribute)


state 232

   83 paramattribute: IN . setexpression

    ID      shift, and go to state 66
    LBRACE  shift, and go to state 58

    setexpression  go to state 245
    identifier     go to state 64
    iditem         go to state 65


state 233

   35 relop: NE .

    $default  reduce using rule 35 (relop)


state 234

   29 relop: LE .

    $default  reduce using rule 29 (relop)


state 235

   30 relop: GE .

    $default  reduce using rule 30 (relop)


state 236

   34 relop: EQ .

    $default  reduce using rule 34 (relop)


state 237

   31 relop: LT .

    $default  reduce using rule 31 (relop)


state 238

   32 relop: GT .

    $default  reduce using rule 32 (relop)


state 239

   33 relop: ASSIGN .
   84 paramattribute: ASSIGN . expr

    ID         shift, and go to state 66
    INT_VAL    shift, and go to state 85
    FLOAT_VAL  shift, and go to state 86
    INFINITY   shift, and go to state 87
    MIN        shift, and go to state 88
    MAX        shift, and go to state 89
    IF         shift, and go to state 90
    CARD       shift, and go to state 91
    ORD        shift, and go to state 92
    SUM        shift, and go to state 93
    PROD       shift, and go to state 94
    LBRACKET   shift, and go to state 95
    '!'        shift, and go to state 96

    ID         [reduce using rule 33 (relop)]
    INT_VAL    [reduce using rule 33 (relop)]
    FLOAT_VAL  [reduce using rule 33 (relop)]
    INFINITY   [reduce using rule 33 (relop)]
    MIN        [reduce using rule 33 (relop)]
    MAX        [reduce using rule 33 (relop)]
    IF         [reduce using rule 33 (relop)]
    CARD       [reduce using rule 33 (relop)]
    ORD        [reduce using rule 33 (relop)]
    SUM        [reduce using rule 33 (relop)]
    PROD       [reduce using rule 33 (relop)]
    LBRACKET   [reduce using rule 33 (relop)]

    identifier    go to state 97
    iditem        go to state 65
    expr          go to state 246
    func          go to state 100
    reduction_op  go to state 101
    value         go to state 102


state 240

   82 paramattribute: relop . expr

    ID         shift, and go to state 66
    INT_VAL    shift, and go to state 85
    FLOAT_VAL  shift, and go to state 86
    INFINITY   shift, and go to state 87
    MIN        shift, and go to state 88
    MAX        shift, and go to state 89
    IF         shift, and go to state 90
    CARD       shift, and go to state 91
    ORD        shift, and go to state 92
    SUM        shift, and go to state 93
    PROD       shift, and go to state 94
    LBRACKET   shift, and go to state 95
    '!'        shift, and go to state 96

    identifier    go to state 97
    iditem        go to state 65
    expr          go to state 247
    func          go to state 100
    reduction_op  go to state 101
    value         go to state 102


state 241

   78 paramattributes: paramattributes paramattribute .

    $default  reduce using rule 78 (paramattributes)


state 242

  122 expr: IF lexpr THEN expr ELSE . expr

    ID         shift, and go to state 66
    INT_VAL    shift, and go to state 85
    FLOAT_VAL  shift, and go to state 86
    INFINITY   shift, and go to state 87
    MIN        shift, and go to state 88
    MAX        shift, and go to state 89
    IF         shift, and go to state 90
    CARD       shift, and go to state 91
    ORD        shift, and go to state 92
    SUM        shift, and go to state 93
    PROD       shift, and go to state 94
    LBRACKET   shift, and go to state 95
    '!'        shift, and go to state 96

    identifier    go to state 97
    iditem        go to state 65
    expr          go to state 248
    func          go to state 100
    reduction_op  go to state 101
    value         go to state 102


state 243

   97 varattribute: SUFFIX ID expr .
  110 expr: expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '*' expr
  113     | expr . '/' expr
  114     | expr . POWER expr
  115     | expr . ELLIPSE expr
  116     | expr . LOGICAL_OR expr
  117     | expr . LOGICAL_AND expr

    POWER        shift, and go to state 133
    LOGICAL_OR   shift, and go to state 134
    LOGICAL_AND  shift, and go to state 135
    ELLIPSE      shift, and go to state 136
    '+'          shift, and go to state 137
    '-'          shift, and go to state 138
    '*'          shift, and go to state 139
    '/'          shift, and go to state 140

    $default  reduce using rule 97 (varattribute)


state 244

   85 paramattribute: DEFAULT expr .
  110 expr: expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '*' expr
  113     | expr . '/' expr
  114     | expr . POWER expr
  115     | expr . ELLIPSE expr
  116     | expr . LOGICAL_OR expr
  117     | expr . LOGICAL_AND expr

    POWER        shift, and go to state 133
    LOGICAL_OR   shift, and go to state 134
    LOGICAL_AND  shift, and go to state 135
    ELLIPSE      shift, and go to state 136
    '+'          shift, and go to state 137
    '-'          shift, and go to state 138
    '*'          shift, and go to state 139
    '/'          shift, and go to state 140

    $default  reduce using rule 85 (paramattribute)


state 245

   83 paramattribute: IN setexpression .
  100 setexpression: setexpression . CROSS setexpression
  101              | setexpression . DIFF setexpression

    DIFF   shift, and go to state 108
    CROSS  shift, and go to state 109

    $default  reduce using rule 83 (paramattribute)


state 246

   84 paramattribute: ASSIGN expr .
  110 expr: expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '*' expr
  113     | expr . '/' expr
  114     | expr . POWER expr
  115     | expr . ELLIPSE expr
  116     | expr . LOGICAL_OR expr
  117     | expr . LOGICAL_AND expr

    POWER        shift, and go to state 133
    LOGICAL_OR   shift, and go to state 134
    LOGICAL_AND  shift, and go to state 135
    ELLIPSE      shift, and go to state 136
    '+'          shift, and go to state 137
    '-'          shift, and go to state 138
    '*'          shift, and go to state 139
    '/'          shift, and go to state 140

    $default  reduce using rule 84 (paramattribute)


state 247

   82 paramattribute: relop expr .
  110 expr: expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '*' expr
  113     | expr . '/' expr
  114     | expr . POWER expr
  115     | expr . ELLIPSE expr
  116     | expr . LOGICAL_OR expr
  117     | expr . LOGICAL_AND expr

    POWER        shift, and go to state 133
    LOGICAL_OR   shift, and go to state 134
    LOGICAL_AND  shift, and go to state 135
    ELLIPSE      shift, and go to state 136
    '+'          shift, and go to state 137
    '-'          shift, and go to state 138
    '*'          shift, and go to state 139
    '/'          shift, and go to state 140

    $default  reduce using rule 82 (paramattribute)


state 248

  110 expr: expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '*' expr
  113     | expr . '/' expr
  114     | expr . POWER expr
  115     | expr . ELLIPSE expr
  116     | expr . LOGICAL_OR expr
  117     | expr . LOGICAL_AND expr
  122     | IF lexpr THEN expr ELSE expr .

    POWER        shift, and go to state 133
    LOGICAL_OR   shift, and go to state 134
    LOGICAL_AND  shift, and go to state 135
    ELLIPSE      shift, and go to state 136
    '+'          shift, and go to state 137
    '-'          shift, and go to state 138
    '*'          shift, and go to state 139
    '/'          shift, and go to state 140

    POWER        [reduce using rule 122 (expr)]
    LOGICAL_OR   [reduce using rule 122 (expr)]
    LOGICAL_AND  [reduce using rule 122 (expr)]
    ELLIPSE      [reduce using rule 122 (expr)]
    '+'          [reduce using rule 122 (expr)]
    '-'          [reduce using rule 122 (expr)]
    '*'          [reduce using rule 122 (expr)]
    '/'          [reduce using rule 122 (expr)]
    $default     reduce using rule 122 (expr)
